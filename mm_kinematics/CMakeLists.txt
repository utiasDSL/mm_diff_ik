cmake_minimum_required(VERSION 2.8.3)
project(mm_kinematics)

add_compile_options(-std=c++11)

## Find catkin macros and libraries
## if COMPONENTS list like find_package(catkin REQUIRED COMPONENTS xyz)
## is used, also find other catkin packages
find_package(catkin REQUIRED COMPONENTS
  roscpp
  mm_math_util
  cmake_modules
)

find_package(Eigen3 3.3 REQUIRED NO_MODULE)

# Install Python module
catkin_python_setup()


###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if your package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
  INCLUDE_DIRS include
  LIBRARIES ${PROJECT_NAME}
  CATKIN_DEPENDS mm_math_util
)

###########
## Build ##
###########

# Specify whether to skip building the C++ kinematics. Defaults to OFF (i.e.,
# do build them). Needs to be turned ON to install the Python code and generate
# the C++ files when the package is first build (consult the README).
option(SKIP_CPP_BUILD "Skip building C++ kinematics library." OFF)

if(SKIP_CPP_BUILD)
  message(WARNING "Skipping C++ kinematics build.")
else()
  message(WARNING "Building C++ kinematics.")

# Specify additional locations of header files
# Your package locations should be listed before other locations
include_directories(
  include
  /usr/local/include/cppad
  ${EIGEN3_INCLUDE_DIRS}
  ${catkin_INCLUDE_DIRS}
)

# Create C++ library
add_library(${PROJECT_NAME}
  src/kinematics.cpp
  src/autogenerated/dJdq.cpp
  src/autogenerated/jacobians.cpp
)
target_link_libraries(${PROJECT_NAME}
  ${catkin_LIBRARIES}
)

# add_executable(ad_test
#   src/ad_test.cpp
# )
# target_link_libraries(ad_test
#   ${catkin_LIBRARIES}
#   dl
# )

# Tests
if(CATKIN_ENABLE_TESTING)
  catkin_add_executable_with_gtest(test_kinematics
    test/test_kinematics.cpp
  )
  target_link_libraries(test_kinematics
    ${PROJECT_NAME}
  )

  catkin_add_executable_with_gtest(test_manipulability
    test/test_manipulability.cpp
  )
  target_link_libraries(test_manipulability
    ${PROJECT_NAME}
  )
endif()

endif()
